{"version":3,"sources":["assets/end.jpg","assets/broken.jpg","assets/rollerCoaster.mp4","contexts/GameContext.js","contexts/InstructionsContext.js","contexts/DataContext.js","contexts/FlagContext.js","components/AppBar/styles.js","components/AppBar/TopBar.js","components/Board/styles.js","components/Board/Board.js","components/Menu/styles.js","components/Menu/Menu.js","components/Banner/styles.js","components/Banner/Banner.js","components/Instructions/styles.js","components/Instructions/Instructions.js","views/Content/styles.js","views/Content/Content.js","App.js","serviceWorker.js","index.js","views/Content/BackgroundVideo.module.css"],"names":["module","exports","GameContext","createContext","InstructionsContext","DataContext","FlagContext","styles","cloud","fill","fontSize","padding","cloudCheck","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","color","TopBar","classes","setGameOn","useContext","setInstructionsOn","data","setData","flags","setFlags","useState","checkSaved","setCheckSaved","checkLoaded","setCheckLoaded","className","AppBar","position","Toolbar","Typography","variant","Button","onClick","style","Tooltip","localStorage","setItem","JSON","stringify","setTimeout","savedFlags","parse","getItem","savedData","marginTop","marginBottom","covered","height","width","backgroundColor","borderRadius","margin","borderColor","borderTopColor","borderLeftColor","borderWidth","borderStyle","fontWeight","uncovered","bounceWobble","merge","bounce","wobble","Board","handleClick","boardLayout","board","size","i","push","map","flag","movement","animation","animationName","Radium","keyframes","Grid","container","file","n","item","xs","key","justify","value","l","Paper","e","onContextMenu","content","text","form","radio","display","button","Menu","handleStart","React","setSize","level","setLevel","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","event","target","FormControlLabel","control","Radio","label","maringTop","img","Banner","status","src","winner","alt","looser","Instructions","textAlign","containerChrome","Content","gameOn","instructionsOn","setStatus","a","url","axios","get","then","res","removeItem","preventDefault","type","remove","flagsTemp","index","splice","body","minesAmount","post","catch","console","log","message","Container","autoPlay","loop","muted","Video","video","sm","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ac3e3b4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/end.fdfbea05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/broken.7181a25e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rollerCoaster.3eba69b4.mp4\";","import { createContext } from 'react';\n\nconst GameContext = createContext();\n\nexport default GameContext;","import { createContext } from 'react';\n\nconst InstructionsContext = createContext();\n\nexport default InstructionsContext;","import { createContext } from 'react';\n\nconst DataContext = createContext();\n\nexport default DataContext;","import { createContext } from 'react';\n\nconst FlagContext = createContext();\n\nexport default FlagContext;","const styles = {\n  cloud: {\n    fill: \"#f50057\",\n    fontSize: 50,\n    padding: 10\n  },\n  cloudCheck: { \n    fill: \"green\", \n    fontSize: 50, \n    padding: 10 \n  }\n};\n\nexport default styles;","import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport GameContext from '../../contexts/GameContext';\nimport InstructionsContext from '../../contexts/InstructionsContext';\nimport DataContext from '../../contexts/DataContext';\nimport FlagContext from '../../contexts/FlagContext';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport styles from './styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: '#f50057'\n  },\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n  const { setGameOn } = useContext(GameContext);\n  const { setInstructionsOn } = useContext(InstructionsContext);\n  const { data, setData } = useContext(DataContext);\n  const { flags, setFlags } = useContext(FlagContext);\n  const [checkSaved, setCheckSaved] = useState(false);\n  const [checkLoaded, setCheckLoaded] = useState(false);\n\n  // Load menu\n  const handleClick = () => {\n    setGameOn(false);\n    setInstructionsOn(false);\n  };\n  \n  //Load instructions\n  const handleClickInstructions = () => {\n    setInstructionsOn(true);\n  };\n\n  // Save game in local storage and show green check icon\n  const handleSave = () => {\n    localStorage.setItem(\"dataSaved\", JSON.stringify(data));\n    localStorage.setItem(\"flagsSaved\", JSON.stringify(flags))\n    setGameOn(false);\n    setCheckSaved(true);\n    setTimeout(() => {\n      setCheckSaved(false);\n    }, 2000)\n  };\n\n  // Load game from local storage and show green check icon\n  const handleLoad = () => {\n    const savedFlags = JSON.parse(localStorage.getItem('flagsSaved'));\n    const savedData = JSON.parse(localStorage.getItem('dataSaved'));\n    setData(savedData);\n    setFlags(savedFlags);\n    setGameOn(true);\n    setCheckLoaded(true);\n    setTimeout(() => {\n      setCheckLoaded(false);\n    }, 2000)\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title} color=\"error\">\n            RCM\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => handleClick()}\n            style={{ marginRight: 15 }}>\n            Menu\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => handleClickInstructions()}\n            style={{ marginRight: 15 }}>\n            How to play\n          </Button>\n          {checkSaved ? (\n            <CloudDoneIcon\n              style={styles.cloudCheck}\n            />\n          ) : (\n              <Tooltip title=\"Save Game\">\n                <BackupIcon\n                  style={styles.cloud}\n                  onClick={handleSave}\n                />\n              </Tooltip>\n            )}\n          {checkLoaded ? (\n            <CloudDoneIcon\n              style={styles.cloudCheck}\n            />\n          ) : (\n              <Tooltip title=\"Load Game\">\n                <CloudDownloadIcon\n                  style={styles.cloud}\n                  onClick={handleLoad}\n                />\n              </Tooltip>\n            )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 110,\n    marginBottom: 10,\n  },\n  covered: {\n    position: 'relative',\n    height: 15,\n    width: 15,\n    backgroundColor: '#999',\n    borderRadius: 1,\n    margin: 0.5,\n    borderColor: '#848181',\n    borderTopColor: '#d0cfcf',\n    borderLeftColor: '#d0cfcf',\n    borderWidth: 4,\n    borderStyle: 'solid',\n    fontSize: 12,\n    fontWeight: 900,\n  },\n  uncovered: {\n    position: 'relative',\n    height: 15,\n    width: 15,\n    backgroundColor: '#999',\n    borderRadius: 1,\n    margin: 0.5,\n    borderColor: '#999',\n    borderTopColor: '#999',\n    borderLeftColor: '#999',\n    borderWidth: 4,\n    borderStyle: 'solid',\n    fontSize: 12,\n    fontWeight: 700,\n  },\n}));","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Radium, { StyleRoot } from 'radium';\nimport { merge, bounce, wobble } from 'react-animations';\nimport { useStyles } from './styles';\n\nconst bounceWobble = merge(bounce, wobble);\n\nfunction Board({ data, handleClick, flags }) {\n  let boardLayout = data && data.board ? JSON.parse(JSON.stringify(data.board)) : [];\n  let size = [];\n  if (data) {\n    for (let i = 0; i < data.size; i++) {\n      size.push(i);\n    };\n  }\n\n  if (boardLayout[0] && flags && flags[0]) {\n    flags.map(flag => {\n      boardLayout[flag[0]][flag[1]] = -2;\n      return true;\n    });\n  }\n\n  const classes = useStyles();\n\n  const movement = {\n    animation: {\n      animation: 'x 20s infinite',\n      animationName: Radium.keyframes(bounceWobble)\n    }\n  };\n\n  return (\n    <StyleRoot>\n      <div style={movement.animation}>\n        <Grid container className={classes.root} spacing={0}>\n          {size.map((file, n) => (\n            <Grid item xs={12} key={n}>\n              <Grid container justify=\"center\" spacing={0}>\n                {size.map((value, l) => (\n                  <Grid key={value} item>\n                    <Paper\n                      className={typeof (boardLayout[file][value]) !== 'string' ?\n                        classes.covered :\n                        classes.uncovered}\n                      onClick={boardLayout[file][value] !== -2 ? (e) => handleClick(e, [n, l]) : null}\n                      onContextMenu={(e) => handleClick(e, [n, l])}\n                    >\n                      {typeof (boardLayout[file][value]) === 'string' ?\n                        boardLayout[file][value] :\n                        boardLayout[file][value] === -2 ? '🚩' :\n                          null}\n                    </Paper>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </StyleRoot>\n  );\n};\n\nexport default Board;","const styles = {\n  content: {\n    height: 200,\n    width: 350,\n    backgroundColor: 'transparent',\n    borderRadius: 8,\n    marginTop: -80,\n    borderColor: '#848181',\n    borderTopColor: '#d0cfcf',\n    borderLeftColor: '#d0cfcf',\n    borderWidth: 4,\n    borderStyle: 'solid',\n  },\n  text: {\n    marginTop: 5,\n    marginBottom: 5\n  },\n  form: {\n    color: 'white',\n    fontWeight: 900\n  },\n  radio: {\n    display: 'inline-flex'\n  },\n  button: {\n    fontWeight: 900,\n    fontSize: 22,\n    padding: '0 20px'\n  }\n};\n\nexport default styles;","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\n\nfunction Menu({ handleStart }) {\n  const [size, setSize] = React.useState('10');\n  const [level, setLevel] = React.useState('1');\n\n  const handleChangeSize = (event) => {\n    setSize(event.target.value);\n  };\n\n  const handleChangeLevel = (event) => {\n    setLevel(event.target.value);\n  };\n\n  return (\n    <div style={styles.content}>\n      <h3 style={styles.text}>Roller Coster Minesweeper</h3>\n      <FormControl component=\"size\">\n        <FormLabel component=\"legend\" style={styles.form}>Size</FormLabel>\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={size} onChange={handleChangeSize}>\n          <div style={styles.radio}>\n            <FormControlLabel value=\"5\" control={<Radio />} label=\"Small\" />\n            <FormControlLabel value=\"10\" control={<Radio />} label=\"Medium\" />\n            <FormControlLabel value=\"15\" control={<Radio />} label=\"Large\" />\n          </div>\n        </RadioGroup>\n      </FormControl>\n      <FormControl component=\"large\">\n        <FormLabel component=\"legend\" style={styles.form}>Level</FormLabel>\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={level} onChange={handleChangeLevel}>\n          <div style={styles.radio}>\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"Easy\" />\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"Advanced\" />\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"God\" />\n          </div>\n        </RadioGroup>\n      </FormControl>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        style={styles.button}\n        onClick={() => handleStart(size, level)}\n      >LET'S RIDE!</Button>\n    </div>\n  );\n};\n\nexport default Menu;\n\n","const styles = {\n  content: {\n    height: 200,\n    width: 350,\n    backgroundColor: 'transparent',\n    borderRadius: 8,\n    marginTop: -80,\n    borderColor: '#848181',\n    borderTopColor: '#d0cfcf',\n    borderLeftColor: '#d0cfcf',\n    borderWidth: 4,\n    borderStyle: 'solid',\n    maringTop: 200,\n  },\n  img: {\n    height: 200,\n    width: 350,\n  }\n};\n\nexport default styles;","import React from 'react';\nimport winner from '../../assets/end.jpg';\nimport looser from '../../assets/broken.jpg';\nimport styles from './styles';\n\nfunction Banner ({status}) {\n  return(\n    <div style={styles.content}>\n      {status === 'winner' ? (\n        <img src={winner} alt=\"roller coaster arrival\" style={styles.img}/>\n      ) : (\n        <img src={looser} alt=\"broken roller coaster\"style={styles.img}/>\n      )}\n    </div>\n  );\n};\n\nexport default Banner;","const styles = {\n  content: {\n    height: 200,\n    width: 350,\n    backgroundColor: 'transparent',\n    borderRadius: 8,\n    marginTop: -80,\n    borderColor: '#848181',\n    borderTopColor: '#d0cfcf',\n    borderLeftColor: '#d0cfcf',\n    borderWidth: 4,\n    borderStyle: 'solid',\n    maringTop: 200,\n  },\n  text: {\n    padding:'0 10px 10px 10px',\n    fontWeight: 900,\n  }\n};\n\nexport default styles;","import React from 'react';\n\nimport styles from './styles';\n\nfunction Instructions ({status}) {\n  return(\n    <div style={styles.content}>\n      <h2>Instructions</h2>\n      <p style={styles.text}>The objective of the game is to clear a the board containing hidden \"mines\" or bombs without detonating any of them. Use left click to uncover the spaces or right click to mark them. Good luck!</p>\n    </div>\n  );\n};\n\nexport default Instructions;","const styles = {\n  container: {\n    textAlign: '-moz-center',\n  },\n  containerChrome: {\n    textAlign: '-webkit-center'\n  }\n};\n\nexport default styles;","import React, { useState, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Board from '../../components/Board/Board';\nimport Menu from '../../components/Menu/Menu';\nimport Banner from '../../components/Banner/Banner';\nimport Instructions from '../../components/Instructions/Instructions';\nimport axios from 'axios';\nimport styles from './styles';\nimport classes from './BackgroundVideo.module.css';\nimport video from '../../assets/rollerCoaster.mp4';\nimport GameContext from '../../contexts/GameContext';\nimport InstructionsContext from '../../contexts/InstructionsContext';\nimport DataContext from '../../contexts/DataContext';\nimport FlagContext from '../../contexts/FlagContext';\n\nfunction Content() {\n  const { data, setData } = useContext(DataContext);\n  const { flags, setFlags } = useContext(FlagContext);\n  const { gameOn, setGameOn } = useContext(GameContext);\n  const { instructionsOn } = useContext(InstructionsContext);\n  const [status, setStatus] = useState('');\n\n  // Reset status game, create board & save marks in local storage\n  const handleStart = async (size, level) => {\n    setStatus();\n    const url = `https://gxrj5cfc5f.execute-api.us-east-1.amazonaws.com/production/api/newBoard?size=${size}&difficulty=${level}`;\n    await axios.get(url).then(res => { setData(res.data) });\n    localStorage.removeItem('flags');\n    setFlags(JSON.parse(localStorage.getItem('flags')));\n    setGameOn(true);\n  };\n\n  // Take the click and play or mark the square\n  const handleClick = async (e, position) => {\n    e.preventDefault();\n    if (e.type === 'contextmenu') {\n      let remove = false;\n      let flagsTemp = JSON.parse(localStorage.getItem('flags'));\n      flagsTemp && flagsTemp[0] && flagsTemp.map((flag, index) => {\n        if (JSON.stringify(flag) === JSON.stringify(position)) {\n          flagsTemp.splice(index, 1);\n          localStorage.setItem(\"flags\", JSON.stringify(flagsTemp));\n          remove = true;\n        }\n        return true;\n      })\n      if (!remove) {\n        !flagsTemp ? flagsTemp = [] : flagsTemp = JSON.parse(localStorage.getItem('flags'));\n        flagsTemp.push(position);\n        localStorage.setItem(\"flags\", JSON.stringify(flagsTemp));\n      }\n      setFlags(JSON.parse(localStorage.getItem('flags')));\n    }\n    if (e.type === 'click') {\n      const url = 'https://gxrj5cfc5f.execute-api.us-east-1.amazonaws.com/production/api/play/uncover';\n      const body = { board: data.board, position: position, size: data.size, minesAmount: data.minesAmount };\n      await axios.post(url, body)\n        .then(res => {\n          if (res.data.status && res.data.status === 'game over') {\n            setStatus(res.data.status);\n          } else {\n            setStatus(res.data.status);\n          }\n          setData(res.data)\n        })\n        .catch(e => console.log(e.message))\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.containerChrome}>\n        <div className={classes.Container}>\n          <video autoPlay='autoplay' loop='loop' muted className={classes.Video}>\n            <source src={video} type='video/mp4' />\n          </video>\n          <div className={classes.Content}>\n            <Grid>\n              <Grid item xs={12} sm={6}>\n                {!gameOn ? (\n                  !instructionsOn ? (\n                    <Menu handleStart={handleStart} />\n                  ) : (\n                      <Instructions />\n                    )\n                ) : (!status ?\n                  <Board data={data} handleClick={handleClick} flags={flags} /> :\n                  <Banner status={status} />\n                  )}\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Content;","import React, { useState } from 'react';\nimport TopBar from './components/AppBar/TopBar';\nimport Content from './views/Content/Content';\nimport GameContext from './contexts/GameContext';\nimport InstructionsContext from './contexts/InstructionsContext';\nimport DataContext from './contexts/DataContext';\nimport FlagContext from './contexts/FlagContext';\n\nfunction App() {\n  const [gameOn, setGameOn] = useState(false);\n  const [instructionsOn, setInstructionsOn] = useState(false);\n  const [data, setData] = useState({});\n  const [flags, setFlags] = useState(JSON.parse(localStorage.getItem('flags')));\n\n  return (\n    <div className=\"App\">\n      <GameContext.Provider value={{ gameOn, setGameOn }}>\n      <InstructionsContext.Provider value={{ instructionsOn, setInstructionsOn }}>\n        <DataContext.Provider value={{ data, setData }}>\n          <FlagContext.Provider value={{ flags, setFlags }}>\n            <TopBar />\n            <Content />\n          </FlagContext.Provider>\n        </DataContext.Provider>\n      </InstructionsContext.Provider>\n      </GameContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"BackgroundVideo_Container__3Fwls\",\"Video\":\"BackgroundVideo_Video__FEGHL\",\"Content\":\"BackgroundVideo_Content__2chod\",\"SubContent\":\"BackgroundVideo_SubContent__7Z2OQ\"};"],"sourceRoot":""}